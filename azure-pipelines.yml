# azure-pipelines.yml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  includeInstallSteps: true  # Set this to false to skip installation steps
  vmware_server: 'your_vmware_server'
  vmware_user: 'your_vmware_user'
  vmware_password: 'your_vmware_password'
  ontap_select_ova_url: 'your_ontap_select_ova_url'
  ontap_select_license_key: 'your_license_key'

stages:
- stage: PrepareAgent
  jobs:
  - job: InstallDependencies
    displayName: 'Install dependencies on agent'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.10.12'
        addToPath: true

    - script: |
        sudo apt-get update
        sudo apt-get -y install python3-pip
        python3 -m pip install --upgrade pip
      displayName: 'Install system dependencies and pip'

    - script: |
        pip3 install ansible
        ansible-galaxy collection install community.vmware
      displayName: 'Install Ansible and VMware collection'

- stage: SetupVMware
  dependsOn: PrepareAgent
  jobs:
  - job: ConfigureVMware
    displayName: 'Configure VMware environment'
    steps:
    - script: |
        echo "[defaults]" > ansible.cfg
        echo "host_key_checking = False" >> ansible.cfg
        echo "[vmware_host]" > inventory
        echo "your_vmware_host ansible_host=${vmware_server} ansible_user=${vmware_user} ansible_password=${vmware_password}" >> inventory
      displayName: 'Prepare Ansible inventory and configuration'

    - script: |
        ansible-playbook -i inventory playbooks/vmware_setup.yml
      displayName: 'Run VMware setup playbook'

- stage: DeployONTAPSelect
  dependsOn: SetupVMware
  jobs:
  - job: DeployONTAP
    displayName: 'Deploy ONTAP Select'
    steps:
    - script: |
        ansible-playbook -i inventory playbooks/deploy_ontap_select.yml \
          -e "ontap_select_ova_url=${ontap_select_ova_url}" \
          -e "ontap_select_license_key=${ontap_select_license_key}"
      displayName: 'Run ONTAP Select deployment playbook'
